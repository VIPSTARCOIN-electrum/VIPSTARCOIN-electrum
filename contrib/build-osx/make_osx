#!/bin/bash

. $(dirname "$0")/../build_tools_util.sh

build_dir=$(dirname "$0")
test -n "$build_dir" -a -d "$build_dir" || exit
cd $build_dir/../..

export PYTHONHASHSEED=22
PYTHON_VERSION=3.6.4
VERSION=`git describe --tags --dirty --always`
STAGING_DIR="dist"
PACKAGE="Qtum Electrum"
TEMP_DMG_NAME="/tmp/qtum-electrum.dmg"
DMG_NAME="${STAGING_DIR}/Qtum-electrum-osx-${VERSION}.dmg"
LIBSECP_VERSION=b408c6a8b287003d1ade5709e6f7bc3c7f1d5be7
export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087;

rm -rf ${STAGING_DIR} ${TEMP_DMG_NAME}

which brew > /dev/null 2>&1 || fail "Please install brew from https://brew.sh/ to continue"

info "Installing zlib and sqlite"
brew install zlib sqlite
export LDFLAGS="-L/usr/local/opt/zlib/lib -L/usr/local/opt/sqlite/lib"
export CPPFLAGS="-I/usr/local/opt/zlib/include -I/usr/local/opt/sqlite/include"

info "Installing Python $PYTHON_VERSION"
export PATH="~/.pyenv/bin:~/.pyenv/shims:~/Library/Python/3.6/bin:$PATH"
if [ -d "~/.pyenv" ]; then
  pyenv update
else
  curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash > /dev/null 2>&1
fi
PYTHON_CONFIGURE_OPTS="--enable-framework" pyenv install -s $PYTHON_VERSION && \
pyenv global $PYTHON_VERSION || fail "Unable to use Python $PYTHON_VERSION"


info "Upgrade pip"
python3 -m pip install pip==19.0.3 --user

info "Installing pyinstaller"
python3 -m pip install -I --user pyinstaller==3.4 --no-use-pep517 || fail "Could not install pyinstaller"


info "Using these versions for building $PACKAGE:"
sw_vers
python3 --version
echo -n "Pyinstaller "
pyinstaller --version

if [ ! -e contrib/build-osx/libusb-1.0.dylib ] ; then
    info "Downloading libusb..."
    curl https://homebrew.bintray.com/bottles/libusb-1.0.22.el_capitan.bottle.tar.gz | \
    tar xz --directory /tmp/
    cp /tmp/libusb/1.0.22/lib/libusb-1.0.dylib contrib/build-osx
fi
echo "82c368dfd4da017ceb32b12ca885576f325503428a4966cc09302cbd62702493  contrib/build-osx/libusb-1.0.dylib" | \
    shasum -a 256 -c || fail "libusb checksum mismatched"

info "Building libsecp256k1"
rm -rf contrib/build-osx/libsecp256k1.0.dylib
brew install autoconf automake libtool
git clone https://github.com/bitcoin-core/secp256k1 /tmp/secp256k1
pushd /tmp/secp256k1
git reset --hard $LIBSECP_VERSION
git clean -f -x -q
./autogen.sh
./configure --enable-module-recovery --enable-experimental --enable-module-ecdh --disable-jni
make
popd
cp /tmp/secp256k1/.libs/libsecp256k1.0.dylib contrib/build-osx

info "Installing requirements..."
python3 -m pip install -r ./requirements.txt --user && \
python3 -m pip install -r ./requirements-binaries.txt --user && \
python3 -m pip install -r ./requirements-fixed.txt --user || \
fail "Could not install requirements"


info "Building $PACKAGE..."
python3 -m pip install --user . > /dev/null || fail "Could not build $PACKAGE"


info "Faking timestamps..."
for d in ~/Library/Python/ ~/.pyenv .; do
  pushd $d
  find . -exec touch -t '200101220000' {} +
  popd
done


info "Building binary"
pyinstaller --noconfirm --ascii --clean --name $VERSION contrib/build-osx/osx.spec || fail "Could not build binary"

info "Adding qtum URI types to Info.plist"
plutil -insert 'CFBundleURLTypes' \
	-xml '<array><dict> <key>CFBundleURLName</key>
	<string>qtum</string>
	<key>CFBundleURLSchemes</key>
	<array><string>qtum</string></array> </dict></array>' \
	-- "dist/${PACKAGE}.app/Contents/Info.plist" \
	|| fail "Could not add keys to Info.plist. Make sure the program 'plutil' exists and is installed."


info "Creating .DMG"
hdiutil create -size 300m -fs HFS+ -volname "${PACKAGE}" -ov ${TEMP_DMG_NAME}

hdiutil mount ${TEMP_DMG_NAME}
cp -R "dist/${PACKAGE}.app" "/Volumes/${PACKAGE}/${PACKAGE}.app"
ln -s /Applications "/Volumes/${PACKAGE}/Applications"

hdiutil detach "/Volumes/${PACKAGE}"
sleep 2

hdiutil convert ${TEMP_DMG_NAME} -format UDZO -o ${DMG_NAME}
hdiutil internet-enable -yes ${DMG_NAME}
rm -rf ${TEMP_DMG_NAME}

openssl dgst -sha256 ${DMG_NAME}